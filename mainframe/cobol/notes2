https://www.koenig-solutions.com/corporate-it-training-certification-courses-online?keyword=koening&device=c&utm_source=google&utm_medium=cpc&utm_device=c&utm_campaign=KOENIG_Brand_-_Gulf-adgroup-Koenig&gclid=Cj0KCQiAjbagBhD3ARIsANRrqEtbVZhg35ch7IiB38_K1gxA9qLVvLShf540wHMakhT3E2rjUPbejeoaAgsWEALw_wcB


FILE STATUS CODES
0-SUCCESSFUL COMPLETION
1-END OF FILE
2-INVALID KEY
3-PERMANENT ERROR
4-LOGIC ERROR
9-IMPLEMENTOR DEFINES

JCL ABEND CODES
DB2 RETURN CODES
VSAM FILE STATUS CODES AND MORE.

https://sites.google.com/site/indusitfactory/file-status-codes-1

COMMON COBOL ERRORS
 - SYNTACTICAL
 - SEMANTICAL
 - USABILITY
 - TOP FAILURES LEADING TO ERRORS
 
COBOL COMPILE OPTIONS

-SSRANGE
-ZONECHECK
-RULES(NOEVENPACK)
-RULES(NOLAXPERF)

NEGATED CONDITION = NOT
CONDITION IS NOT TRUE

COMPUND CONDITIONS= AND OR ()= EVALUATION

EVALUATE=
EVALUATE is an expanded form of the IF statement
Simplifies decision logic using CASE STRUCTURE
Can be thought of as a 'decision table'
Can test any number of mutually exclusive conditions in single statements using: TRUE, FALSE, ALSO, THRU, NOT
Can make use of 88-levels
"WHEN OTHER" must be coded last

example:

EVALUATE RETURN-CODE
  WHEN '00' ADD 1 TO RECORD-COUNT
  WHEN '10' SET END-OF-FILE-SWITCH TO TRUE
  WHEN OTHER DISPLAY
       'PROBLEM RETURN CODE OF' RETURN-CODE
	   PERFORM MY-ABEND-PARAGRAPH
END-EVALUATE

INSPECT COMMAND:
INSPECT has 4 formats:
  TALLYING, REPLACING, TALLYING AND REPLACING, AND CONVERTING
  
REDEFINES=
  REDEFINES gives a 2nd name & description to the same data
  
DATA DIVISION.
  FILE SECTION.
  FD INPUT RECORD CONTAINS 80 CHARACTERS
     DATA RECORDS ARE PHONE-NUMBER.
  01 PHONE-NUMBER PIC X(12).
  01 PHONE-DETAILS REDEFINES PHONE-NUMBER.
     10 AREA-CODE PIC 9(3).
	 10 DASH      PIC X.
	 10 EXCHANGE  PIC 9(3).
	 10 EXTENSION PIC 9(4).

WHAT IS A TABLE?
    - TABLE is similar to an array
	- Used to look up data in ELEMENTS
	- ELEMENTS are a sequence of memoty locations
	- A TABLE storing months will have 12 ELEMENTS
	- A TABLE listing my friends may have 3 ELEMENTS

MY FRIEND MEL		25 YEARS OLD
MY FRIEND SALLY		29 YEARS OLD
MY FRIEND STEVE		46 YEARS OLD

    - ELEMENTS are accessed with a SUBSCRIPT
	- SUBSCRIPTS can be any of these:
		a. a positive literal integer
		b. a positive variable defined as an integer
		c. a special data item called an INDEX
		
OCCURS lists the number of elements in a field
OCCURS is used to define a table in WORKING-STORAGE
Note: OCCURS does not work on 01, 66, 77, or 88 levels.

EXAMPLE #1: Teacher calculating the average grade for 3 tests.

01	TEST-RESULTS.
	05	TEST-1 PIC S9(3).
	05	TEST-2 PIC S9(3).
	05	TEST-3 PIC S9(3).
COMPUTE AVG-GRADE = (TEST-1 + TEST-2 + TEST-3)/3.

EXAMPLE #2: Same calculating, but uses a TABLE. The field named TEST has 3 elements (1,2, and 3 with parentheses).

WORKING-STORAGE.
01	TEST-RESULTS.
	05 TEST OCCURS 3 TIMES PIC S9(3).
COMPUTE AVG-GRADE = (TEST(1) + TEST(2) + TEST(3))/3.

https://www.strongback.us/2021/03/make-z-os-debugging-easier-with-the-ibm-debugger-profile-service#.ZA-caB_MLtR

IBM COBOL Basic Testing and Debugging
https://coursera.org/verify/UCTHLLWFNW5R

THREE CONTROL LOGIC STRUCTURES
SEQUENCE
SELECTION
ITERATION

TESTING STEPS
	1. DESIGN THE PROGRAM using STRUCTURED COBOL
	2. WRITE THE PROGRAM
	3. DESK CHECKING - Carefully review a program for errors
	4. Design and create test data that is comprehensive and realistic
	5. COMPILE THE PROGRAM: if there are syntax error or other "Compile-Time Error" fix errors and compile again
	6. LINK THE PROGRAM if unsuccessful, fix errors and repeat
	7. PROGRAM WALKTHROUGH - Identify what "success" looks like - step through the logic of the program, predict
	   and write out what the output results should look like
	8. EXECUTE THE PROGRAM: If unsuccessful ("Execution Error" or "Logic "Error"), fix errors and repeat
	9. Review the output to ensure correctness: If unsuccessful, return to the walkthrough or to the beginning to evaluate
	   the degign and the coded
	10. Prepare the program for Production

TESTING STATEGIES - SYSTEM and REGRESSION


